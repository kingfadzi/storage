events {}

http {
    server {
        listen 8000;
        server_name _;

        location / {
            proxy_pass http://host.docker.internal:3010/affine/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Primary proxy for Superset using a base path of /analytics.
        location /analytics {
            # Let Superset know its public base URL is /analytics.
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Script-Name /analytics;
            # Forward requests to the upstream Superset instance (which runs under /superset).
            proxy_pass http://host.docker.internal:8099/superset;
            # Rewrite upstream redirects from /superset/ to /analytics/ including the proper port.
            proxy_redirect /superset/ http://$host:$server_port/analytics/;
            # Hide the upstream Content-Security-Policy header.
            proxy_hide_header Content-Security-Policy;
        }

        # This regex block handles static assets and various Superset subpaths.
        location ~ ^/(static|superset|sqllab|savedqueryview|druid|tablemodelview|databaseasync|dashboardmodelview|slicemodelview|dashboardasync|druiddatasourcemodelview|api|csstemplateasyncmodelview|chart|savedqueryviewapi|r|datasource|sliceaddview) {
            try_files $uri /analytics/$uri /analytics/$uri?$query_string @rules;
        }

        # Fallback redirection to enforce the /analytics base.
        location @rules {
            return 308 http://$host:$server_port/analytics$uri$is_args$query_string;
        }

    }
}
