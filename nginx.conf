events {}

http {
    server {
        listen 8000;
        server_name _;

        location / {
            proxy_pass http://host.docker.internal:3010/affine/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Primary proxy for Superset using a base path of /analytics.
        location /analytics {
            # These headers let Superset know that its base URL is /analytics
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Script-Name /analytics;
            proxy_pass http://host.docker.internal:8099/superset;
            proxy_redirect off;
        }

        # This location catches requests for common Superset subpaths.
        # It tries to serve the file if it exists, or falls back to /analytics/$uri.
        location ~ ^/(static|superset|sqllab|savedqueryview|druid|tablemodelview|databaseasync|dashboardmodelview|slicemodelview|dashboardasync|druiddatasourcemodelview|api|csstemplateasyncmodelview|chart|savedqueryviewapi|r|datasource|sliceaddview) {
            try_files $uri /analytics/$uri /analytics/$uri?$query_string @rules;
        }

        # Fallback location that redirects requests to the /analytics base.
        location @rules {
            # Adjust "http://$host" if your external URL differs.
            return 308 http://$host/analytics$uri$is_args$query_string;
        }

    }
}
