events {}

http {
    server {
        listen 8000;
        server_name _;

        # Affine configuration
        location / {
            proxy_pass http://host.docker.internal:3010;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Fix path rewriting for backend-generated URLs
            proxy_redirect ~^(http://[^/]+)/affine/(.*)$ $1/$2;
        }

        # Superset configuration
        location /analytics/ {
            proxy_pass http://host.docker.internal:8099/;  # Critical trailing slash
            proxy_http_version 1.1;

            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Script-Name /analytics;

            # CORS configuration (dev environment)
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # Handle OPTIONS requests
            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        # Health check endpoint
        location = /health {
            proxy_pass http://host.docker.internal:8099/health;
            access_log off;
        }
    }
}
