events {}

http {
    server {
        listen 8000;
        server_name _;

        # Affine routing (primary frontend)
        location / {
            proxy_pass http://host.docker.internal:3010/affine/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Required to prevent Affine from conflicting with /analytics
            proxy_redirect ~^http://[^/]+(/affine/.*)$ $1;
        }

        # Superset main endpoint
        location /analytics/ {
            proxy_pass http://host.docker.internal:8099/;  # Critical trailing slash
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # Added missing protocol header
            proxy_set_header X-Script-Name /analytics;

            # Dev CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # Handle WebSocket connections
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Superset internal routes - FIXED PROXY_PASS
        location ~* ^/(static|superset|sqllab|savedqueryview|druid|tablemodelview|databaseasync|dashboardmodelview|slicemodelview) {
            proxy_pass http://host.docker.internal:8099/;  # Added trailing slash
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Script-Name /analytics;

            # Add CORS headers here too
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # Required for OAuth/SAML redirects
        error_page 301 302 307 = @handle_redirects;
        location @handle_redirects {
            proxy_pass $upstream_http_location;
            add_header 'Access-Control-Allow-Origin' '*' always;
        }
    }
}
