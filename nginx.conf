events {}

http {
    server {
        listen 8000;
        server_name _;

        # Required headers for proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Metabase configuration
        location /metabase/ {
            proxy_pass http://host.docker.internal:3000/;
            proxy_redirect off;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Superset configuration
        location /superset/ {
            proxy_pass http://host.docker.internal:8099/;
            proxy_redirect off;
        }

        location /affine/ {
            # Forward request to the upstream while stripping the /affine prefix
            proxy_pass http://host.docker.internal:3010/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect / /affine/;

            # Disable compression so sub_filter works correctly
            proxy_set_header Accept-Encoding "";

            # Inject a <base> tag into HTML for relative URL resolution
            sub_filter '</head>' '<base href="/affine/"></head>';
            sub_filter_once off;
            sub_filter_types text/html;

            # Rewrite root-relative URLs in HTML, CSS, JS responses
            sub_filter 'href="/' 'href="/affine/';
            sub_filter 'src="/' 'src="/affine/';
            sub_filter 'content="/' 'content="/affine/';
        }

        location /graphql {
            proxy_pass http://host.docker.internal:3010/graphql;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

           # Proxy /api/ endpoints
            location /api/ {
                proxy_pass http://host.docker.internal:3010/api/;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            # Proxy /imgs/ endpoints
            location /imgs/ {
                proxy_pass http://host.docker.internal:3010/imgs/;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            # Proxy favicon (exact match)
            location = /favicon-144.png {
                proxy_pass http://host.docker.internal:3010/favicon-144.png;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

        # Prefect configuration
        location /prefect/ {
            proxy_pass http://host.docker.internal:4200/;
            proxy_redirect off;
        }

      # MinIO API configuration
      # API Configuration
        location /minio/ {
            proxy_pass http://localhost:9000/;

            # Add from docs
            client_max_body_size 0;
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_connect_timeout 300;
        }

        # Console Configuration
        location /minio/ui/ {
            rewrite ^/minio/ui/(.*) /$1 break;
            proxy_pass http://localhost:9090/;

            # Essential from docs
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            real_ip_header X-Real-IP;
        }


    }
}
